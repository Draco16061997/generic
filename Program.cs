


//class Maximum<T>
//{
//    T Value { get; set; }
//    T Value2 { get; set; }
//    T Value3 { get; set; } 

//    public Maximum(T value, T value2, T value3 ) 
//    {
//        Value = value;
//        Value2 = value2;
//        Value3 = value3;
//    }    

//    void Max( T Value, T Value2, T Value3 )
//    {
//       if ( Value == typeof(int) ) { }

//    }
//}





//string Maximum<T>(T num1, T num2, T num3) where T : IComparable<T>
//{
//    if (num1.CompareTo(num2) == 0 && num2.CompareTo(num3) == 0)
//    {
//        return $"{num1}";
//    }
//    else if (num1.CompareTo(num2) >= 0 && num1.CompareTo(num3) >= 0)
//    {
//        return $"{num1}";
//    }
//    else if (num2.CompareTo(num1) >= 0 && num2.CompareTo(num3) >= 0)
//    {
//        return $"{num2}";
//    }
//    else
//    {
//        return $"{num3}";
//    }
//}

//Console.WriteLine(Maximum<int>(1,2, 7));



//Система управления библиотекой
//Цель: Разработать систему для управления коллекцией книг в библиотеке, включая функциональность для добавления, удаления, поиска и ведения статистики по книгам и читателям.






//Библиотека (Library):
//Свойства: Список книг, Список читателей.

//Методы:
//Добавить / удалить книгу.
//Добавить / удалить читателя.
//Поиск книг по различным критериям (автор, название, жанр).
//Вывод статистики(самая популярная книга, количество книг по жанрам, количество книг на руках у читателей).

//Реализуйте возможность взаимодействия между читателями и библиотекой, так чтобы читатели могли брать и возвращать книги. При этом система должна отслеживать, какие книги находятся на руках у читателей.
//Обеспечьте управление списком книг и читателей в библиотеке, включая добавление и удаление элементов.
//Добавьте функционал для поиска книг, который позволяет искать книги по разным критериям одновременно (например, по автору и жанру).
//Реализуйте систему статистики для отслеживания популярности книг и активности читателей.
//Рассмотрите возможность использования обобщений для создания универсальных методов в классе библиотеки, например, для сортировки книг по различным критериям.
//Используйте принципы наследования для создания подклассов книг, например, для разделения на учебную литературу и художественную.
